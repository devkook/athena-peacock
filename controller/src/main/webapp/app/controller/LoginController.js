/*
 * File: app/controller/LoginController.js
 *
 * This file was generated by Sencha Architect version 2.2.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Peacock.controller.LoginController', {
    extend: 'Ext.app.Controller',

    refs: [
        {
            ref: 'viewport',
            selector: 'mainView'
        },
        {
            ref: 'loginWin',
            selector: 'loginWin'
        }
    ],

    onButtonClick: function(button, e, eOpts) {
        //alert("button click!!");

        var viewport = this.getViewport();
        var loginWin = this.getLoginWin();


        var formPanel = Ext.getCmp("loginForm");


        formPanel.getForm().submit({
            clientValidation: true,
            url: "user/login",
            waitMsg: 'Loging...',
            success: function(form, action) {
                viewport.layout.setActiveItem(1);
                loginWin.close();
            },
            failure: function(form, action) {
                switch (action.failureType) {
                    case Ext.form.action.Action.CLIENT_INVALID:
                    Ext.Msg.alert('Failure', '아이디 및 비밀번호를 모두 입력해주세요.');
                    break;
                    case Ext.form.action.Action.CONNECT_FAILURE:
                    Ext.Msg.alert('Failure', 'Server communication failed');
                    break;
                    case Ext.form.action.Action.SERVER_INVALID:
                    Ext.Msg.alert('Failure', action.result.msg);
                }
            }
        });


    },

    init: function(application) {
        this.control({
            "loginWin button": {
                click: this.onButtonClick
            }
        });
    }

});
