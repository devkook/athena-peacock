/*
 * File: app/view/ASGroupTabPanel.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Peacock.view.ASGroupTabPanel', {
    extend: 'Ext.tab.Panel',
    alias: 'widget.asGroupTabPanel',

    height: 391,
    width: 668,
    activeTab: 0,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'panel',
                    title: 'Description',
                    items: [
                        {
                            xtype: 'propertygrid',
                            id: 'asGroupDescGrid',
                            header: false,
                            title: 'My Property Grid',
                            sortableColumns: false,
                            source: {
                                status: 'Loading ...'
                            }
                        }
                    ]
                }
            ],
            listeners: {
                added: {
                    fn: me.onTabpanelAdded,
                    scope: me
                }
            }
        });

        me.callParent(arguments);
    },

    onTabpanelAdded: function(component, container, pos, eOpts) {
        /*
        * Scaling Groups > Description Tab 화면 조회.
        */

        var grid1 = Ext.getCmp("asGroupDescGrid");

        var jsonObj;

        Ext.Ajax.request({
            url: 'static/ASGroupDetail.json',
            params: {
                as_group_id : Peacock.app.selectedRecord.get("as_group_id")
            },
            success: function(response){
                var jsonObj = Ext.JSON.decode(response.responseText);

                grid1.setSource(jsonObj.data);
            }
        });
    }

});